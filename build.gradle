apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    jarInclude
}

dependencies {
    compile 'org.json:json:20180813'
    compile 'org.apache.spark:spark-sql_2.11:2.1.0'

    jarInclude 'org.json:json:20180813'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'commons-io', name: 'commons-io', version: '2.6'
    testCompile 'com.opencsv:opencsv:3.9'
}

buildDir = "build/java"

sourceSets {
    main {
        java {
            srcDirs = ['src/java/main/java']
        }
        resources {
            srcDirs = ['src/java/main/resources']
        }
    }

    test {
        java {
            srcDirs = ['src/java/test/java']
        }
        resources {
            srcDirs = ['src/java/test/resources']
        }
    }
}

task generateNativeHeaders(type:Exec) {
    def classpath = sourceSets.main.output.classesDir
    def nativeIncludes = "src/FactExtract/Parser/textminerlib_java/generated"
    commandLine "javah", "-d", nativeIncludes, "-classpath", classpath, "com.srg.tomita.TomitaParserInternal"

    dependsOn classes
}

task buildTomita(type:Exec) {
    commandLine 'sh', './tomita_build.sh'
}

build {
    dependsOn buildTomita
}

task buildSpark {
    group 'build'
    description 'Assembles this project for spark'
    dependsOn build
}

def absoluteLibPath = projectDir.absolutePath + "/lib"
def absoluteBuildLibPath = projectDir.absolutePath + "/build/lib"

test {
    environment "LD_LIBRARY_PATH", absoluteLibPath + ":" + absoluteBuildLibPath
}
